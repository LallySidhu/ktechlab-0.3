# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.7 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
AWK = @AWK@
CC = @CC@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = @ECHO@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
F77 = @F77@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_GPSIM = @LIB_GPSIM@
LIB_JASPER = @LIB_JASPER@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
RC = @RC@
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__quote = @am__quote@
glib_cflags = @glib_cflags@
install_sh = @install_sh@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/src -I$(top_srcdir)/src/core \
	-I$(top_srcdir)/src/electronics -I$(top_srcdir)/src/electronics/components \
	-I$(top_srcdir)/src/electronics/simulation -I$(top_srcdir)/src/flowparts -I$(top_srcdir)/src/gui \
	-I$(top_srcdir)/src/languages -I$(top_srcdir)/src/mechanics -I$(top_srcdir)/src/micro \
	-I$(top_srcdir)/gpsim-interface $(all_includes)


#>- METASOURCES = AUTO

noinst_LTLIBRARIES = libgui.la
#>- libgui_la_SOURCES = contexthelp.cpp doublespinbox.cpp itemeditor.cpp \
#>- 	itemselector.cpp microsettingsdlg.cpp newfiledlg.cpp orientationwidget.cpp \
#>- 	outputmethoddlg.cpp pieditor.cpp plvitem.cpp propertieslistview.cpp asmformattingwidget.ui \
#>- 	gpasmsettingswidget.ui logicwidget.ui newfilewidget.ui newprojectwidget.ui \
#>- 	outputmethodwidget.ui microsettingswidget.ui settingsdlg.cpp oscilloscope.cpp \
#>- 	oscilloscopewidget.ui oscilloscopeview.cpp probepositioner.cpp generaloptionswidget.ui \
#>- 	logview.cpp createsubprojectwidget.ui processingoptionswidget.ui \
#>- 	sdccoptionswidget.ui projectdlgs.cpp linkeroptionswidget.ui microselectwidget.cpp \
#>- 	symbolviewer.cpp picprogrammerconfigwidget.ui newpinmappingwidget.ui programmerwidget.ui \
#>- 	programmerdlg.cpp colorcombo.cpp
#>+ 10
libgui_la_SOURCES=contexthelp.cpp doublespinbox.cpp itemeditor.cpp \
	itemselector.cpp microsettingsdlg.cpp newfiledlg.cpp orientationwidget.cpp \
	outputmethoddlg.cpp pieditor.cpp plvitem.cpp propertieslistview.cpp  \
	    \
	  settingsdlg.cpp oscilloscope.cpp \
	 oscilloscopeview.cpp probepositioner.cpp  \
	logview.cpp   \
	 projectdlgs.cpp  microselectwidget.cpp \
	symbolviewer.cpp    \
	programmerdlg.cpp colorcombo.cpp asmformattingwidget.cpp gpasmsettingswidget.cpp logicwidget.cpp newfilewidget.cpp newprojectwidget.cpp outputmethodwidget.cpp microsettingswidget.cpp oscilloscopewidget.cpp generaloptionswidget.cpp createsubprojectwidget.cpp processingoptionswidget.cpp sdccoptionswidget.cpp linkeroptionswidget.cpp picprogrammerconfigwidget.cpp newpinmappingwidget.cpp programmerwidget.cpp


libgui_la_PCH = AUTO

noinst_HEADERS = settingsdlg.h oscilloscope.h oscilloscopeview.h \
	probepositioner.h projectdlgs.h microselectwidget.h symbolviewer.h programmerdlg.h \
	colorcombo.h

subdir = src/gui
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libgui_la_LDFLAGS =
libgui_la_LIBADD =
am_libgui_la_OBJECTS = contexthelp.lo doublespinbox.lo itemeditor.lo \
	itemselector.lo microsettingsdlg.lo newfiledlg.lo \
	orientationwidget.lo outputmethoddlg.lo pieditor.lo plvitem.lo \
	propertieslistview.lo settingsdlg.lo oscilloscope.lo \
	oscilloscopeview.lo probepositioner.lo logview.lo \
	projectdlgs.lo microselectwidget.lo symbolviewer.lo \
	programmerdlg.lo colorcombo.lo
#>- libgui_la_OBJECTS = $(am_libgui_la_OBJECTS)
#>+ 11
libgui_la_final_OBJECTS = libgui_la.all_cpp.lo 
libgui_la_nofinal_OBJECTS = contexthelp.lo doublespinbox.lo itemeditor.lo \
	itemselector.lo microsettingsdlg.lo newfiledlg.lo \
	orientationwidget.lo outputmethoddlg.lo pieditor.lo plvitem.lo \
	propertieslistview.lo settingsdlg.lo oscilloscope.lo \
	oscilloscopeview.lo probepositioner.lo logview.lo \
	projectdlgs.lo microselectwidget.lo symbolviewer.lo \
	programmerdlg.lo colorcombo.lo asmformattingwidget.lo gpasmsettingswidget.lo logicwidget.lo newfilewidget.lo newprojectwidget.lo outputmethodwidget.lo microsettingswidget.lo oscilloscopewidget.lo generaloptionswidget.lo createsubprojectwidget.lo processingoptionswidget.lo sdccoptionswidget.lo linkeroptionswidget.lo picprogrammerconfigwidget.lo newpinmappingwidget.lo programmerwidget.lo\
projectdlgs.moc.lo 
@KDE_USE_FINAL_FALSE@libgui_la_OBJECTS = $(libgui_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libgui_la_OBJECTS = $(libgui_la_final_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/colorcombo.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/contexthelp.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/doublespinbox.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/itemeditor.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/itemselector.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/logview.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/microselectwidget.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/microsettingsdlg.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/newfiledlg.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/orientationwidget.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/oscilloscope.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/oscilloscopeview.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/outputmethoddlg.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/pieditor.Plo ./$(DEPDIR)/plvitem.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/probepositioner.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/programmerdlg.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/projectdlgs.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/propertieslistview.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/settingsdlg.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/symbolviewer.Plo
#>+ 40
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/asmformattingwidget.P $(DEPDIR)/gpasmsettingswidget.P $(DEPDIR)/logicwidget.P $(DEPDIR)/newfilewidget.P $(DEPDIR)/newprojectwidget.P $(DEPDIR)/outputmethodwidget.P $(DEPDIR)/microsettingswidget.P $(DEPDIR)/oscilloscopewidget.P $(DEPDIR)/generaloptionswidget.P $(DEPDIR)/createsubprojectwidget.P $(DEPDIR)/processingoptionswidget.P $(DEPDIR)/sdccoptionswidget.P $(DEPDIR)/linkeroptionswidget.P $(DEPDIR)/picprogrammerconfigwidget.P $(DEPDIR)/newpinmappingwidget.P $(DEPDIR)/programmerwidget.P $(DEPDIR)/projectdlgs.moc.P  $(DEPDIR)/libgui_la.all_cpp.P ./$(DEPDIR)/colorcombo.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/contexthelp.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/doublespinbox.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/itemeditor.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/itemselector.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/logview.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/microselectwidget.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/microsettingsdlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/newfiledlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/orientationwidget.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/oscilloscope.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/oscilloscopeview.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/outputmethoddlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/pieditor.Plo ./$(DEPDIR)/plvitem.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/probepositioner.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/programmerdlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/projectdlgs.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/propertieslistview.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/settingsdlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/symbolviewer.Plo
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/asmformattingwidget.P $(DEPDIR)/gpasmsettingswidget.P $(DEPDIR)/logicwidget.P $(DEPDIR)/newfilewidget.P $(DEPDIR)/newprojectwidget.P $(DEPDIR)/outputmethodwidget.P $(DEPDIR)/microsettingswidget.P $(DEPDIR)/oscilloscopewidget.P $(DEPDIR)/generaloptionswidget.P $(DEPDIR)/createsubprojectwidget.P $(DEPDIR)/processingoptionswidget.P $(DEPDIR)/sdccoptionswidget.P $(DEPDIR)/linkeroptionswidget.P $(DEPDIR)/picprogrammerconfigwidget.P $(DEPDIR)/newpinmappingwidget.P $(DEPDIR)/programmerwidget.P $(DEPDIR)/projectdlgs.moc.P ./$(DEPDIR)/colorcombo.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/contexthelp.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/doublespinbox.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/itemeditor.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/itemselector.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/logview.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/microselectwidget.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/microsettingsdlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/newfiledlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/orientationwidget.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/oscilloscope.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/oscilloscopeview.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/outputmethoddlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/pieditor.Plo ./$(DEPDIR)/plvitem.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/probepositioner.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/programmerdlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/projectdlgs.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/propertieslistview.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/settingsdlg.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/symbolviewer.Plo
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libgui_la_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libgui_la_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/gui/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/gui/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/gui/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgui.la: $(libgui_la_OBJECTS) $(libgui_la_DEPENDENCIES) 
	$(CXXLINK)  $(libgui_la_LDFLAGS) $(libgui_la_OBJECTS) $(libgui_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colorcombo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contexthelp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doublespinbox.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemeditor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemselector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/microselectwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/microsettingsdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newfiledlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/orientationwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oscilloscope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oscilloscopeview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outputmethoddlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pieditor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plvitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/probepositioner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/programmerdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectdlgs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propertieslistview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/settingsdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symbolviewer.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
oscilloscope.moc: $(srcdir)/oscilloscope.h
	$(MOC) $(srcdir)/oscilloscope.h -o oscilloscope.moc

#>+ 2
mocs: oscilloscope.moc

#>+ 3
propertieslistview.moc: $(srcdir)/propertieslistview.h
	$(MOC) $(srcdir)/propertieslistview.h -o propertieslistview.moc

#>+ 2
mocs: propertieslistview.moc

#>+ 3
itemselector.moc: $(srcdir)/itemselector.h
	$(MOC) $(srcdir)/itemselector.h -o itemselector.moc

#>+ 2
mocs: itemselector.moc

#>+ 3
microsettingsdlg.moc: $(srcdir)/microsettingsdlg.h
	$(MOC) $(srcdir)/microsettingsdlg.h -o microsettingsdlg.moc

#>+ 2
mocs: microsettingsdlg.moc

#>+ 3
orientationwidget.moc: $(srcdir)/orientationwidget.h
	$(MOC) $(srcdir)/orientationwidget.h -o orientationwidget.moc

#>+ 2
mocs: orientationwidget.moc

#>+ 3
newfiledlg.moc: $(srcdir)/newfiledlg.h
	$(MOC) $(srcdir)/newfiledlg.h -o newfiledlg.moc

#>+ 2
mocs: newfiledlg.moc

#>+ 3
microselectwidget.moc: $(srcdir)/microselectwidget.h
	$(MOC) $(srcdir)/microselectwidget.h -o microselectwidget.moc

#>+ 2
mocs: microselectwidget.moc

#>+ 3
programmerdlg.moc: $(srcdir)/programmerdlg.h
	$(MOC) $(srcdir)/programmerdlg.h -o programmerdlg.moc

#>+ 2
mocs: programmerdlg.moc

#>+ 3
contexthelp.moc: $(srcdir)/contexthelp.h
	$(MOC) $(srcdir)/contexthelp.h -o contexthelp.moc

#>+ 2
mocs: contexthelp.moc

#>+ 3
colorcombo.moc: $(srcdir)/colorcombo.h
	$(MOC) $(srcdir)/colorcombo.h -o colorcombo.moc

#>+ 2
mocs: colorcombo.moc

#>+ 3
oscilloscopeview.moc: $(srcdir)/oscilloscopeview.h
	$(MOC) $(srcdir)/oscilloscopeview.h -o oscilloscopeview.moc

#>+ 2
mocs: oscilloscopeview.moc

#>+ 3
pieditor.moc: $(srcdir)/pieditor.h
	$(MOC) $(srcdir)/pieditor.h -o pieditor.moc

#>+ 2
mocs: pieditor.moc

#>+ 3
plvitem.moc: $(srcdir)/plvitem.h
	$(MOC) $(srcdir)/plvitem.h -o plvitem.moc

#>+ 2
mocs: plvitem.moc

#>+ 3
probepositioner.moc: $(srcdir)/probepositioner.h
	$(MOC) $(srcdir)/probepositioner.h -o probepositioner.moc

#>+ 2
mocs: probepositioner.moc

#>+ 3
settingsdlg.moc: $(srcdir)/settingsdlg.h
	$(MOC) $(srcdir)/settingsdlg.h -o settingsdlg.moc

#>+ 2
mocs: settingsdlg.moc

#>+ 3
projectdlgs.moc.cpp: $(srcdir)/projectdlgs.h
	$(MOC) $(srcdir)/projectdlgs.h -o projectdlgs.moc.cpp

#>+ 2
mocs: projectdlgs.moc.cpp

#>+ 3
symbolviewer.moc: $(srcdir)/symbolviewer.h
	$(MOC) $(srcdir)/symbolviewer.h -o symbolviewer.moc

#>+ 2
mocs: symbolviewer.moc

#>+ 3
doublespinbox.moc: $(srcdir)/doublespinbox.h
	$(MOC) $(srcdir)/doublespinbox.h -o doublespinbox.moc

#>+ 2
mocs: doublespinbox.moc

#>+ 3
logview.moc: $(srcdir)/logview.h
	$(MOC) $(srcdir)/logview.h -o logview.moc

#>+ 2
mocs: logview.moc

#>+ 3
itemeditor.moc: $(srcdir)/itemeditor.h
	$(MOC) $(srcdir)/itemeditor.h -o itemeditor.moc

#>+ 2
mocs: itemeditor.moc

#>+ 3
outputmethoddlg.moc: $(srcdir)/outputmethoddlg.h
	$(MOC) $(srcdir)/outputmethoddlg.h -o outputmethoddlg.moc

#>+ 2
mocs: outputmethoddlg.moc

#>+ 3
clean-metasources:
	-rm -f  oscilloscope.moc propertieslistview.moc itemselector.moc microsettingsdlg.moc orientationwidget.moc newfiledlg.moc microselectwidget.moc programmerdlg.moc contexthelp.moc colorcombo.moc oscilloscopeview.moc pieditor.moc plvitem.moc probepositioner.moc settingsdlg.moc projectdlgs.moc.cpp symbolviewer.moc doublespinbox.moc logview.moc itemeditor.moc outputmethoddlg.moc

#>+ 2
KDE_DIST=generaloptionswidget.ui autoscan-2.61.log programmerwidget.ui plvitem.h orientationwidget.h microsettingsdlg.h doublespinbox.h logicwidget.ui newpinmappingwidget.h sdccoptionswidget.h newprojectwidget.ui microsettingswidget.h generaloptionswidget.h processingoptionswidget.ui gpasmsettingswidget.ui contexthelp.h itemeditor.h picprogrammerconfigwidget.h microsettingswidget.ui newfilewidget.h itemselector.h outputmethoddlg.h outputmethodwidget.ui newfilewidget.ui asmformattingwidget.h linkeroptionswidget.h oscilloscopewidget.h createsubprojectwidget.ui outputmethodwidget.h gpasmsettingswidget.h newprojectwidget.h propertieslistview.h logicwidget.h sdccoptionswidget.ui processingoptionswidget.h logview.h picprogrammerconfigwidget.ui oscilloscopewidget.ui programmerwidget.h pieditor.h newfiledlg.h linkeroptionswidget.ui asmformattingwidget.ui newpinmappingwidget.ui createsubprojectwidget.h 

#>+ 19
clean-ui:
	-rm -f \
	asmformattingwidget.cpp asmformattingwidget.h asmformattingwidget.moc \
	gpasmsettingswidget.cpp gpasmsettingswidget.h gpasmsettingswidget.moc \
	logicwidget.cpp logicwidget.h logicwidget.moc \
	newfilewidget.cpp newfilewidget.h newfilewidget.moc \
	newprojectwidget.cpp newprojectwidget.h newprojectwidget.moc \
	outputmethodwidget.cpp outputmethodwidget.h outputmethodwidget.moc \
	microsettingswidget.cpp microsettingswidget.h microsettingswidget.moc \
	oscilloscopewidget.cpp oscilloscopewidget.h oscilloscopewidget.moc \
	generaloptionswidget.cpp generaloptionswidget.h generaloptionswidget.moc \
	createsubprojectwidget.cpp createsubprojectwidget.h createsubprojectwidget.moc \
	processingoptionswidget.cpp processingoptionswidget.h processingoptionswidget.moc \
	sdccoptionswidget.cpp sdccoptionswidget.h sdccoptionswidget.moc \
	linkeroptionswidget.cpp linkeroptionswidget.h linkeroptionswidget.moc \
	picprogrammerconfigwidget.cpp picprogrammerconfigwidget.h picprogrammerconfigwidget.moc \
	newpinmappingwidget.cpp newpinmappingwidget.h newpinmappingwidget.moc \
	programmerwidget.cpp programmerwidget.h programmerwidget.moc 

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/gui/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/gui/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libgui_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/contexthelp.cpp $(srcdir)/doublespinbox.cpp $(srcdir)/itemeditor.cpp $(srcdir)/itemselector.cpp $(srcdir)/microsettingsdlg.cpp $(srcdir)/newfiledlg.cpp $(srcdir)/orientationwidget.cpp $(srcdir)/outputmethoddlg.cpp $(srcdir)/pieditor.cpp $(srcdir)/plvitem.cpp $(srcdir)/propertieslistview.cpp $(srcdir)/settingsdlg.cpp $(srcdir)/oscilloscope.cpp $(srcdir)/oscilloscopeview.cpp $(srcdir)/probepositioner.cpp $(srcdir)/logview.cpp $(srcdir)/projectdlgs.cpp $(srcdir)/microselectwidget.cpp $(srcdir)/symbolviewer.cpp $(srcdir)/programmerdlg.cpp $(srcdir)/colorcombo.cpp $(srcdir)/asmformattingwidget.cpp $(srcdir)/gpasmsettingswidget.cpp $(srcdir)/logicwidget.cpp $(srcdir)/newfilewidget.cpp $(srcdir)/newprojectwidget.cpp $(srcdir)/outputmethodwidget.cpp $(srcdir)/microsettingswidget.cpp $(srcdir)/oscilloscopewidget.cpp $(srcdir)/generaloptionswidget.cpp $(srcdir)/createsubprojectwidget.cpp $(srcdir)/processingoptionswidget.cpp $(srcdir)/sdccoptionswidget.cpp $(srcdir)/linkeroptionswidget.cpp $(srcdir)/picprogrammerconfigwidget.cpp $(srcdir)/newpinmappingwidget.cpp $(srcdir)/programmerwidget.cpp $(srcdir)/projectdlgs.moc.cpp  propertieslistview.moc generaloptionswidget.moc microsettingsdlg.moc orientationwidget.moc microselectwidget.moc contexthelp.moc colorcombo.moc pieditor.moc oscilloscopeview.moc processingoptionswidget.moc plvitem.moc probepositioner.moc picprogrammerconfigwidget.moc programmerwidget.moc symbolviewer.moc doublespinbox.moc logview.moc linkeroptionswidget.moc newprojectwidget.moc asmformattingwidget.moc outputmethoddlg.moc itemeditor.moc oscilloscope.moc sdccoptionswidget.moc itemselector.moc newpinmappingwidget.moc createsubprojectwidget.moc newfiledlg.moc microsettingswidget.moc gpasmsettingswidget.moc programmerdlg.moc logicwidget.moc oscilloscopewidget.moc newfilewidget.moc settingsdlg.moc outputmethodwidget.moc
	@echo 'creating libgui_la.all_cpp.cpp ...'; \
	rm -f libgui_la.all_cpp.files libgui_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libgui_la.all_cpp.final; \
	for file in contexthelp.cpp doublespinbox.cpp itemeditor.cpp itemselector.cpp microsettingsdlg.cpp newfiledlg.cpp orientationwidget.cpp outputmethoddlg.cpp pieditor.cpp plvitem.cpp propertieslistview.cpp settingsdlg.cpp oscilloscope.cpp oscilloscopeview.cpp probepositioner.cpp logview.cpp projectdlgs.cpp microselectwidget.cpp symbolviewer.cpp programmerdlg.cpp colorcombo.cpp asmformattingwidget.cpp gpasmsettingswidget.cpp logicwidget.cpp newfilewidget.cpp newprojectwidget.cpp outputmethodwidget.cpp microsettingswidget.cpp oscilloscopewidget.cpp generaloptionswidget.cpp createsubprojectwidget.cpp processingoptionswidget.cpp sdccoptionswidget.cpp linkeroptionswidget.cpp picprogrammerconfigwidget.cpp newpinmappingwidget.cpp programmerwidget.cpp projectdlgs.moc.cpp ; do \
	  echo "#include \"$$file\"" >> libgui_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libgui_la.all_cpp.final; \
	done; \
	cat libgui_la.all_cpp.final libgui_la.all_cpp.files > libgui_la.all_cpp.cpp; \
	rm -f libgui_la.all_cpp.final libgui_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libgui_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 64
newfiledlg.o: newfiledlg.moc 
orientationwidget.o: orientationwidget.moc 
newfiledlg.lo: newfiledlg.moc 
programmerdlg.o: programmerdlg.moc 
$(srcdir)/plvitem.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
doublespinbox.lo: doublespinbox.moc 
contexthelp.lo: contexthelp.moc 
propertieslistview.o: propertieslistview.moc 
symbolviewer.o: symbolviewer.moc 
contexthelp.o: contexthelp.moc 
programmerdlg.lo: programmerdlg.moc 
$(srcdir)/colorcombo.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
microselectwidget.lo: microselectwidget.moc 
nmcheck-am: nmcheck
oscilloscope.lo: oscilloscope.moc 
itemselector.lo: itemselector.moc 
$(srcdir)/itemeditor.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/probepositioner.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
propertieslistview.lo: propertieslistview.moc 
oscilloscopeview.lo: oscilloscopeview.moc 
$(srcdir)/contexthelp.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/orientationwidget.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
itemeditor.lo: itemeditor.moc 
colorcombo.lo: colorcombo.moc 
$(srcdir)/newfiledlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/logview.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/microselectwidget.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/oscilloscopeview.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
logview.lo: logview.moc 
$(srcdir)/symbolviewer.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/programmerdlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
pieditor.o: pieditor.moc 
$(srcdir)/outputmethoddlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
$(srcdir)/itemselector.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
settingsdlg.o: settingsdlg.moc 
$(srcdir)/projectdlgs.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
itemselector.o: itemselector.moc 
pieditor.lo: pieditor.moc 
symbolviewer.lo: symbolviewer.moc 
orientationwidget.lo: orientationwidget.moc 
$(srcdir)/oscilloscope.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
plvitem.lo: plvitem.moc 
outputmethoddlg.o: outputmethoddlg.moc 
microsettingsdlg.lo: microsettingsdlg.moc 
outputmethoddlg.lo: outputmethoddlg.moc 
$(srcdir)/doublespinbox.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
itemeditor.o: itemeditor.moc 
oscilloscope.o: oscilloscope.moc 
probepositioner.lo: probepositioner.moc 
$(srcdir)/propertieslistview.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
colorcombo.o: colorcombo.moc 
logview.o: logview.moc 
microselectwidget.o: microselectwidget.moc 
microsettingsdlg.o: microsettingsdlg.moc 
nmcheck: 
$(srcdir)/settingsdlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
settingsdlg.lo: settingsdlg.moc 
plvitem.o: plvitem.moc 
probepositioner.o: probepositioner.moc 
$(srcdir)/microsettingsdlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
doublespinbox.o: doublespinbox.moc 
$(srcdir)/pieditor.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h 
oscilloscopeview.o: oscilloscopeview.moc 

#>+ 240
linkeroptionswidget.cpp: $(srcdir)/linkeroptionswidget.ui linkeroptionswidget.h linkeroptionswidget.moc
	rm -f linkeroptionswidget.cpp
	echo '#include <kdialog.h>' > linkeroptionswidget.cpp
	echo '#include <klocale.h>' >> linkeroptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i linkeroptionswidget.h $(srcdir)/linkeroptionswidget.ui > linkeroptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" linkeroptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_linkeroptionswidget,g" >> linkeroptionswidget.cpp ;\
	rm -f linkeroptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "linkeroptionswidget.moc"' >> linkeroptionswidget.cpp; else rm -f linkeroptionswidget.cpp ; exit $$ret ; fi

linkeroptionswidget.h: $(srcdir)/linkeroptionswidget.ui
	$(UIC) -o linkeroptionswidget.h $(srcdir)/linkeroptionswidget.ui

linkeroptionswidget.moc: linkeroptionswidget.h
	$(MOC) linkeroptionswidget.h -o linkeroptionswidget.moc

generaloptionswidget.cpp: $(srcdir)/generaloptionswidget.ui generaloptionswidget.h generaloptionswidget.moc
	rm -f generaloptionswidget.cpp
	echo '#include <kdialog.h>' > generaloptionswidget.cpp
	echo '#include <klocale.h>' >> generaloptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i generaloptionswidget.h $(srcdir)/generaloptionswidget.ui > generaloptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" generaloptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_generaloptionswidget,g" >> generaloptionswidget.cpp ;\
	rm -f generaloptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "generaloptionswidget.moc"' >> generaloptionswidget.cpp; else rm -f generaloptionswidget.cpp ; exit $$ret ; fi

generaloptionswidget.h: $(srcdir)/generaloptionswidget.ui
	$(UIC) -o generaloptionswidget.h $(srcdir)/generaloptionswidget.ui

generaloptionswidget.moc: generaloptionswidget.h
	$(MOC) generaloptionswidget.h -o generaloptionswidget.moc

logicwidget.cpp: $(srcdir)/logicwidget.ui logicwidget.h logicwidget.moc
	rm -f logicwidget.cpp
	echo '#include <kdialog.h>' > logicwidget.cpp
	echo '#include <klocale.h>' >> logicwidget.cpp
	$(UIC) -tr ${UIC_TR} -i logicwidget.h $(srcdir)/logicwidget.ui > logicwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" logicwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_logicwidget,g" >> logicwidget.cpp ;\
	rm -f logicwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "logicwidget.moc"' >> logicwidget.cpp; else rm -f logicwidget.cpp ; exit $$ret ; fi

logicwidget.h: $(srcdir)/logicwidget.ui
	$(UIC) -o logicwidget.h $(srcdir)/logicwidget.ui

logicwidget.moc: logicwidget.h
	$(MOC) logicwidget.h -o logicwidget.moc

outputmethodwidget.cpp: $(srcdir)/outputmethodwidget.ui outputmethodwidget.h outputmethodwidget.moc
	rm -f outputmethodwidget.cpp
	echo '#include <kdialog.h>' > outputmethodwidget.cpp
	echo '#include <klocale.h>' >> outputmethodwidget.cpp
	$(UIC) -tr ${UIC_TR} -i outputmethodwidget.h $(srcdir)/outputmethodwidget.ui > outputmethodwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" outputmethodwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_outputmethodwidget,g" >> outputmethodwidget.cpp ;\
	rm -f outputmethodwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "outputmethodwidget.moc"' >> outputmethodwidget.cpp; else rm -f outputmethodwidget.cpp ; exit $$ret ; fi

outputmethodwidget.h: $(srcdir)/outputmethodwidget.ui
	$(UIC) -o outputmethodwidget.h $(srcdir)/outputmethodwidget.ui

outputmethodwidget.moc: outputmethodwidget.h
	$(MOC) outputmethodwidget.h -o outputmethodwidget.moc

picprogrammerconfigwidget.cpp: $(srcdir)/picprogrammerconfigwidget.ui picprogrammerconfigwidget.h picprogrammerconfigwidget.moc
	rm -f picprogrammerconfigwidget.cpp
	echo '#include <kdialog.h>' > picprogrammerconfigwidget.cpp
	echo '#include <klocale.h>' >> picprogrammerconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i picprogrammerconfigwidget.h $(srcdir)/picprogrammerconfigwidget.ui > picprogrammerconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" picprogrammerconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_picprogrammerconfigwidget,g" >> picprogrammerconfigwidget.cpp ;\
	rm -f picprogrammerconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "picprogrammerconfigwidget.moc"' >> picprogrammerconfigwidget.cpp; else rm -f picprogrammerconfigwidget.cpp ; exit $$ret ; fi

picprogrammerconfigwidget.h: $(srcdir)/picprogrammerconfigwidget.ui
	$(UIC) -o picprogrammerconfigwidget.h $(srcdir)/picprogrammerconfigwidget.ui

picprogrammerconfigwidget.moc: picprogrammerconfigwidget.h
	$(MOC) picprogrammerconfigwidget.h -o picprogrammerconfigwidget.moc

processingoptionswidget.cpp: $(srcdir)/processingoptionswidget.ui processingoptionswidget.h processingoptionswidget.moc
	rm -f processingoptionswidget.cpp
	echo '#include <kdialog.h>' > processingoptionswidget.cpp
	echo '#include <klocale.h>' >> processingoptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i processingoptionswidget.h $(srcdir)/processingoptionswidget.ui > processingoptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" processingoptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_processingoptionswidget,g" >> processingoptionswidget.cpp ;\
	rm -f processingoptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "processingoptionswidget.moc"' >> processingoptionswidget.cpp; else rm -f processingoptionswidget.cpp ; exit $$ret ; fi

processingoptionswidget.h: $(srcdir)/processingoptionswidget.ui
	$(UIC) -o processingoptionswidget.h $(srcdir)/processingoptionswidget.ui

processingoptionswidget.moc: processingoptionswidget.h
	$(MOC) processingoptionswidget.h -o processingoptionswidget.moc

oscilloscopewidget.cpp: $(srcdir)/oscilloscopewidget.ui oscilloscopewidget.h oscilloscopewidget.moc
	rm -f oscilloscopewidget.cpp
	echo '#include <kdialog.h>' > oscilloscopewidget.cpp
	echo '#include <klocale.h>' >> oscilloscopewidget.cpp
	$(UIC) -tr ${UIC_TR} -i oscilloscopewidget.h $(srcdir)/oscilloscopewidget.ui > oscilloscopewidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" oscilloscopewidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_oscilloscopewidget,g" >> oscilloscopewidget.cpp ;\
	rm -f oscilloscopewidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "oscilloscopewidget.moc"' >> oscilloscopewidget.cpp; else rm -f oscilloscopewidget.cpp ; exit $$ret ; fi

oscilloscopewidget.h: $(srcdir)/oscilloscopewidget.ui
	$(UIC) -o oscilloscopewidget.h $(srcdir)/oscilloscopewidget.ui

oscilloscopewidget.moc: oscilloscopewidget.h
	$(MOC) oscilloscopewidget.h -o oscilloscopewidget.moc

programmerwidget.cpp: $(srcdir)/programmerwidget.ui programmerwidget.h programmerwidget.moc
	rm -f programmerwidget.cpp
	echo '#include <kdialog.h>' > programmerwidget.cpp
	echo '#include <klocale.h>' >> programmerwidget.cpp
	$(UIC) -tr ${UIC_TR} -i programmerwidget.h $(srcdir)/programmerwidget.ui > programmerwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" programmerwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_programmerwidget,g" >> programmerwidget.cpp ;\
	rm -f programmerwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "programmerwidget.moc"' >> programmerwidget.cpp; else rm -f programmerwidget.cpp ; exit $$ret ; fi

programmerwidget.h: $(srcdir)/programmerwidget.ui
	$(UIC) -o programmerwidget.h $(srcdir)/programmerwidget.ui

programmerwidget.moc: programmerwidget.h
	$(MOC) programmerwidget.h -o programmerwidget.moc

gpasmsettingswidget.cpp: $(srcdir)/gpasmsettingswidget.ui gpasmsettingswidget.h gpasmsettingswidget.moc
	rm -f gpasmsettingswidget.cpp
	echo '#include <kdialog.h>' > gpasmsettingswidget.cpp
	echo '#include <klocale.h>' >> gpasmsettingswidget.cpp
	$(UIC) -tr ${UIC_TR} -i gpasmsettingswidget.h $(srcdir)/gpasmsettingswidget.ui > gpasmsettingswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gpasmsettingswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gpasmsettingswidget,g" >> gpasmsettingswidget.cpp ;\
	rm -f gpasmsettingswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gpasmsettingswidget.moc"' >> gpasmsettingswidget.cpp; else rm -f gpasmsettingswidget.cpp ; exit $$ret ; fi

gpasmsettingswidget.h: $(srcdir)/gpasmsettingswidget.ui
	$(UIC) -o gpasmsettingswidget.h $(srcdir)/gpasmsettingswidget.ui

gpasmsettingswidget.moc: gpasmsettingswidget.h
	$(MOC) gpasmsettingswidget.h -o gpasmsettingswidget.moc

newfilewidget.cpp: $(srcdir)/newfilewidget.ui newfilewidget.h newfilewidget.moc
	rm -f newfilewidget.cpp
	echo '#include <kdialog.h>' > newfilewidget.cpp
	echo '#include <klocale.h>' >> newfilewidget.cpp
	$(UIC) -tr ${UIC_TR} -i newfilewidget.h $(srcdir)/newfilewidget.ui > newfilewidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newfilewidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newfilewidget,g" >> newfilewidget.cpp ;\
	rm -f newfilewidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newfilewidget.moc"' >> newfilewidget.cpp; else rm -f newfilewidget.cpp ; exit $$ret ; fi

newfilewidget.h: $(srcdir)/newfilewidget.ui
	$(UIC) -o newfilewidget.h $(srcdir)/newfilewidget.ui

newfilewidget.moc: newfilewidget.h
	$(MOC) newfilewidget.h -o newfilewidget.moc

sdccoptionswidget.cpp: $(srcdir)/sdccoptionswidget.ui sdccoptionswidget.h sdccoptionswidget.moc
	rm -f sdccoptionswidget.cpp
	echo '#include <kdialog.h>' > sdccoptionswidget.cpp
	echo '#include <klocale.h>' >> sdccoptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i sdccoptionswidget.h $(srcdir)/sdccoptionswidget.ui > sdccoptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" sdccoptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_sdccoptionswidget,g" >> sdccoptionswidget.cpp ;\
	rm -f sdccoptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "sdccoptionswidget.moc"' >> sdccoptionswidget.cpp; else rm -f sdccoptionswidget.cpp ; exit $$ret ; fi

sdccoptionswidget.h: $(srcdir)/sdccoptionswidget.ui
	$(UIC) -o sdccoptionswidget.h $(srcdir)/sdccoptionswidget.ui

sdccoptionswidget.moc: sdccoptionswidget.h
	$(MOC) sdccoptionswidget.h -o sdccoptionswidget.moc

asmformattingwidget.cpp: $(srcdir)/asmformattingwidget.ui asmformattingwidget.h asmformattingwidget.moc
	rm -f asmformattingwidget.cpp
	echo '#include <kdialog.h>' > asmformattingwidget.cpp
	echo '#include <klocale.h>' >> asmformattingwidget.cpp
	$(UIC) -tr ${UIC_TR} -i asmformattingwidget.h $(srcdir)/asmformattingwidget.ui > asmformattingwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" asmformattingwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_asmformattingwidget,g" >> asmformattingwidget.cpp ;\
	rm -f asmformattingwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "asmformattingwidget.moc"' >> asmformattingwidget.cpp; else rm -f asmformattingwidget.cpp ; exit $$ret ; fi

asmformattingwidget.h: $(srcdir)/asmformattingwidget.ui
	$(UIC) -o asmformattingwidget.h $(srcdir)/asmformattingwidget.ui

asmformattingwidget.moc: asmformattingwidget.h
	$(MOC) asmformattingwidget.h -o asmformattingwidget.moc

microsettingswidget.cpp: $(srcdir)/microsettingswidget.ui microsettingswidget.h microsettingswidget.moc
	rm -f microsettingswidget.cpp
	echo '#include <kdialog.h>' > microsettingswidget.cpp
	echo '#include <klocale.h>' >> microsettingswidget.cpp
	$(UIC) -tr ${UIC_TR} -i microsettingswidget.h $(srcdir)/microsettingswidget.ui > microsettingswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" microsettingswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_microsettingswidget,g" >> microsettingswidget.cpp ;\
	rm -f microsettingswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "microsettingswidget.moc"' >> microsettingswidget.cpp; else rm -f microsettingswidget.cpp ; exit $$ret ; fi

microsettingswidget.h: $(srcdir)/microsettingswidget.ui
	$(UIC) -o microsettingswidget.h $(srcdir)/microsettingswidget.ui

microsettingswidget.moc: microsettingswidget.h
	$(MOC) microsettingswidget.h -o microsettingswidget.moc

newpinmappingwidget.cpp: $(srcdir)/newpinmappingwidget.ui newpinmappingwidget.h newpinmappingwidget.moc
	rm -f newpinmappingwidget.cpp
	echo '#include <kdialog.h>' > newpinmappingwidget.cpp
	echo '#include <klocale.h>' >> newpinmappingwidget.cpp
	$(UIC) -tr ${UIC_TR} -i newpinmappingwidget.h $(srcdir)/newpinmappingwidget.ui > newpinmappingwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newpinmappingwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newpinmappingwidget,g" >> newpinmappingwidget.cpp ;\
	rm -f newpinmappingwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newpinmappingwidget.moc"' >> newpinmappingwidget.cpp; else rm -f newpinmappingwidget.cpp ; exit $$ret ; fi

newpinmappingwidget.h: $(srcdir)/newpinmappingwidget.ui
	$(UIC) -o newpinmappingwidget.h $(srcdir)/newpinmappingwidget.ui

newpinmappingwidget.moc: newpinmappingwidget.h
	$(MOC) newpinmappingwidget.h -o newpinmappingwidget.moc

newprojectwidget.cpp: $(srcdir)/newprojectwidget.ui newprojectwidget.h newprojectwidget.moc
	rm -f newprojectwidget.cpp
	echo '#include <kdialog.h>' > newprojectwidget.cpp
	echo '#include <klocale.h>' >> newprojectwidget.cpp
	$(UIC) -tr ${UIC_TR} -i newprojectwidget.h $(srcdir)/newprojectwidget.ui > newprojectwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newprojectwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newprojectwidget,g" >> newprojectwidget.cpp ;\
	rm -f newprojectwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newprojectwidget.moc"' >> newprojectwidget.cpp; else rm -f newprojectwidget.cpp ; exit $$ret ; fi

newprojectwidget.h: $(srcdir)/newprojectwidget.ui
	$(UIC) -o newprojectwidget.h $(srcdir)/newprojectwidget.ui

newprojectwidget.moc: newprojectwidget.h
	$(MOC) newprojectwidget.h -o newprojectwidget.moc

createsubprojectwidget.cpp: $(srcdir)/createsubprojectwidget.ui createsubprojectwidget.h createsubprojectwidget.moc
	rm -f createsubprojectwidget.cpp
	echo '#include <kdialog.h>' > createsubprojectwidget.cpp
	echo '#include <klocale.h>' >> createsubprojectwidget.cpp
	$(UIC) -tr ${UIC_TR} -i createsubprojectwidget.h $(srcdir)/createsubprojectwidget.ui > createsubprojectwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" createsubprojectwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_createsubprojectwidget,g" >> createsubprojectwidget.cpp ;\
	rm -f createsubprojectwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "createsubprojectwidget.moc"' >> createsubprojectwidget.cpp; else rm -f createsubprojectwidget.cpp ; exit $$ret ; fi

createsubprojectwidget.h: $(srcdir)/createsubprojectwidget.ui
	$(UIC) -o createsubprojectwidget.h $(srcdir)/createsubprojectwidget.ui

createsubprojectwidget.moc: createsubprojectwidget.h
	$(MOC) createsubprojectwidget.h -o createsubprojectwidget.moc
